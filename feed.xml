<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://yashjakhotiya.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://yashjakhotiya.github.io/blog/" rel="alternate" type="text/html" /><updated>2020-12-19T13:35:21-06:00</updated><id>https://yashjakhotiya.github.io/blog/feed.xml</id><title type="html">Blog</title><subtitle>Blog</subtitle><entry><title type="html">GSoC ‚Äò20: Kubeflow Customer User Journey Notebooks with Tensorflow 2.x Keras</title><link href="https://yashjakhotiya.github.io/blog/open-source/mlops/2020/08/23/gsoc-kubeflow.html" rel="alternate" type="text/html" title="GSoC '20: Kubeflow Customer User Journey Notebooks with Tensorflow 2.x Keras" /><published>2020-08-23T00:00:00-05:00</published><updated>2020-08-23T00:00:00-05:00</updated><id>https://yashjakhotiya.github.io/blog/open-source/mlops/2020/08/23/gsoc-kubeflow</id><content type="html" xml:base="https://yashjakhotiya.github.io/blog/open-source/mlops/2020/08/23/gsoc-kubeflow.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Open source software development and &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt;, both started long before the summer of 2020. When the world was starting to grapple with the realities of &lt;a href=&quot;https://www.entrepreneur.com/article/354872&quot;&gt;remote work&lt;/a&gt;, open source community was already thriving on it. Over the course of my college years, I have found out three things that I am passionate about - open source, machine learning and &lt;a href=&quot;https://landing.google.com/sre/&quot;&gt;SRE&lt;/a&gt;. &lt;a href=&quot;https://www.kubeflow.org/&quot;&gt;Kubeflow&lt;/a&gt; has managed to incorporate all of these into one and doing a project with this organisation has been a dream come true!&lt;/p&gt;

&lt;h1 id=&quot;goal&quot;&gt;Goal&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt; is already an industry-standard in managing cloud resources. &lt;a href=&quot;https://www.kubeflow.org/&quot;&gt;Kubeflow&lt;/a&gt; is on its path to become an industry standard in managing machine learning workflows on cloud. Examples that illustrate Kubeflow functionalities using latest industry technologies make Kubeflow easier to use and more accessible to all potential users. This project has aimed at building samples for Jupyter notebook to Kubeflow deployment using Tensorflow 2.0 Keras for backend training code, illustrating customer user journey (CUJ) in the process. This project has also served as an hands-on to large scale application of machine learning bringing in the elements of DevOps and SRE and this has kept me motivated throughout the project.&lt;/p&gt;

&lt;h1 id=&quot;the-kubeflow-community&quot;&gt;The Kubeflow Community&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.kubeflow.org/docs/about/community/&quot;&gt;Kubeflow community&lt;/a&gt; is a highly approachable and closely-knit community that has been reaching out to and &lt;a href=&quot;https://www.kubeflow.org/docs/about/gsoc/&quot;&gt;helping&lt;/a&gt; potential GSoC students well before the application period. Respecting this, I made sure to take feedback for my proposal of the &lt;a href=&quot;https://summerofcode.withgoogle.com/projects/#5507335985823744&quot;&gt;project idea&lt;/a&gt; I chose, before the application deadline. Mentors &lt;a href=&quot;https://github.com/terrytangyuan&quot;&gt;Yuan Tang&lt;/a&gt;, &lt;a href=&quot;https://github.com/gaocegege&quot;&gt;Ce Gao&lt;/a&gt; and &lt;a href=&quot;https://github.com/ChanYiLin&quot;&gt;Jack Lin&lt;/a&gt; were candid in providing me feedback and I refined and changed my proposal accordingly. To my sweet surprise, I got selected for the idea!üòÅ What has really helped me in these three months of coding period is that one month of &lt;a href=&quot;https://developers.google.com/open-source/gsoc/timeline&quot;&gt;community bonding&lt;/a&gt; where I got to know the community and more about the technicalities of Kubeflow.&lt;/p&gt;

&lt;h1 id=&quot;the-project&quot;&gt;The Project&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://yashjakhotiya.github.io/blog/images/2020-08-23-gsoc-20-tf-2-examples/kubeflow_components.png&quot; alt=&quot;&quot; title=&quot;Kubeflow Components&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Examples created as part of this project needed to be easily reproducible to serve their purpose. Initially the underlying model decided to demonstrate Kubeflow functionalities was a BiDirectional RNN to be trained on IMDB large movie review &lt;a href=&quot;http://ai.stanford.edu/%7Eamaas/data/sentiment/&quot;&gt;dataset&lt;/a&gt; for sentiment analysis based on a &lt;a href=&quot;https://www.tensorflow.org/tutorials/text/text_classification_rnn&quot;&gt;tensorflow tutorial&lt;/a&gt;. Over the course of time, we decided to also add another set of examples using  a neural machine translation model in its backend trained on a Spanish to English &lt;a href=&quot;http://www.manythings.org/anki/&quot;&gt;dataset&lt;/a&gt; based on another &lt;a href=&quot;https://www.tensorflow.org/tutorials/text/nmt_with_attention&quot;&gt;tensorflow tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reasons for choosing these models were:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;https://github.com/kubeflow/examples&quot;&gt;kubeflow/examples&lt;/a&gt; repo needed more NLP-related tasks.&lt;/li&gt;
  &lt;li&gt;These were more of &lt;em&gt;hello world&lt;/em&gt; tasks in the field of NLP. So that users who go through these samples need not worry about training code and focus more on Kubeflow‚Äôs functionalities.&lt;/li&gt;
  &lt;li&gt;These are based on tensorflow tutorials. Kubeflow tutorials based on Tensorflow tutorials show better coupling between the two.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;repository-structure&quot;&gt;Repository Structure&lt;/h2&gt;

&lt;p&gt;I created a &lt;a href=&quot;https://github.com/yashjakhotiya/kubeflow-gsoc-2020&quot;&gt;repo&lt;/a&gt; under my own profile to regularly push commits to and my mentors consistently reviewed the work I pushed there. This repo has all of my work with the log history preserved. Each of the two models has the following folder structure explaining core Kubeflow functionalities -&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;training-model&amp;gt;.py&lt;/code&gt; - This is the core training code upon which all subsequent examples showing Kubeflow functionalities are based. Please go through this first to know more about the machine learning task subsequent notebooks will manage. For example check the &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/text_classification_rnn.py&quot;&gt;source code&lt;/a&gt; of the model used for the text classification task.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;distributed_&amp;lt;training-model&amp;gt;.py&lt;/code&gt; - To truly take advantage of multiple compute nodes, the training code has to be modified to support distributed training. The code in the above mentioned file is modified with Tensorflow‚Äôs &lt;a href=&quot;https://www.tensorflow.org/guide/distributed_training&quot;&gt;distributed training&lt;/a&gt; strategy and hosted &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/distributed_text_classification_rnn.py&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; - This is the dockerfile which is used to build Docker image of the training code. Some Kubeflow functionalities require that a docker image of the training code is built and hosted on a docker container registry. This Docker 101 &lt;a href=&quot;https://www.docker.com/101-tutorial&quot;&gt;tutorial&lt;/a&gt; is a good starting point to get hands-on training on Docker. For complete starters in the field of containerization, this &lt;a href=&quot;https://opensource.com/resources/what-docker&quot;&gt;introduction&lt;/a&gt; can serve as a good starting point. The dockerfile used with the source code mentioned above can be found &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/Dockerfile&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fairing-with-python-sdk.ipynb&lt;/code&gt; - Fairing is a Kubeflow functionality that lets you run model training tasks remotely. This is the Jupyter notebook which deploys a model training task on cloud using Kubeflow Fairing. Fairing does not require you to build a Docker image of the training code first. Hence, its training code resides in the same notebook. To know more about Kubeflow Fairing, please visit Fairing‚Äôs &lt;a href=&quot;https://www.kubeflow.org/docs/components/fairing/fairing-overview/&quot;&gt;official documentation&lt;/a&gt;. To get a better idea about Fairing, you can take a look at the text classification Fairing notebook &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/fairing-with-python-sdk.ipynb&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;katib-with-python-sdk.ipynb&lt;/code&gt; - &lt;a href=&quot;https://www.kubeflow.org/docs/components/hyperparameter-tuning/hyperparameter/&quot;&gt;Katib&lt;/a&gt; is a Kubeflow functionality that lets you perform hyperparameter tuning experiments and reports best set of hyperparameters based on a provided metric. This is the Jupyter notebook which launches Katib hyperparameter tuning experiments using its &lt;a href=&quot;https://github.com/kubeflow/katib/tree/master/sdk/python/v1alpha3&quot;&gt;Python SDK&lt;/a&gt;. Katib requires you to build and host a Docker image of your training code in a container registry. For this sample, we have used &lt;a href=&quot;https://cloud.google.com/cloud-build/docs&quot;&gt;gcloud builds&lt;/a&gt; to build the required Docker image of the training code along with the training data and host it on &lt;a href=&quot;https://cloud.google.com/container-registry&quot;&gt;Google Container Registry&lt;/a&gt;. This is the &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/katib-with-python-sdk.ipynb&quot;&gt;notebook&lt;/a&gt; we used to demonstrate Katib for the text classification task.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tfjob-with-python-sdk.ipynb&lt;/code&gt; - &lt;a href=&quot;https://www.kubeflow.org/docs/components/training/tftraining/&quot;&gt;TFJobs&lt;/a&gt; are used to run distributed training jobs over Kubernetes. With multiple workers, TFJob truly leverage the ability of your code to support distributed training. This Jupyter notebook demonstrates how to use TFJob. The Docker image built from the distributed version of our core training code is used in this notebook. TFJob notebook for the text classification task can be found &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/tfjob-with-python-sdk.ipynb&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tekton-pipeline-with-python-sdk.ipynb&lt;/code&gt; - &lt;a href=&quot;https://www.kubeflow.org/docs/pipelines/overview/pipelines-overview/&quot;&gt;Kubeflow Pipeline&lt;/a&gt; is a platform that lets you build, manage and deploy end-to-end machine learning workflows. This is a Jupyter notebook which bundles Katib hyperparameter tuning and TFJob distributed training into one Kubeflow pipeline. The pipeline used here uses &lt;a href=&quot;https://cloud.google.com/tekton&quot;&gt;Tekton&lt;/a&gt; in its backend. Tekton is a Kubernetes resource to create efficient &lt;a href=&quot;https://opensource.com/article/18/8/what-cicd&quot;&gt;continuous integration and delivery&lt;/a&gt; (CI/CD) systems. The pipeline notebook for the text classification task can be found at &lt;a href=&quot;https://github.com/kubeflow/examples/blob/master/tensorflow_cuj/text_classification/tekton-pipeline-with-python-sdk.ipynb&quot;&gt;this&lt;/a&gt; place.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;merged-prs&quot;&gt;Merged PRs&lt;/h2&gt;

&lt;p&gt;In the community bonding period, I opened numerous small issues and PRs solving these issues, as I encountered them when reading documentation or implementing an example. This was done in an effort to know more about the Kubeflow community.&lt;/p&gt;

&lt;p&gt;For the main project, I copied these built notebooks and the final work product into a directory created in my fork of the &lt;a href=&quot;https://github.com/kubeflow/examples&quot;&gt;kubeflow/examples&lt;/a&gt; repo and created a &lt;a href=&quot;https://github.com/kubeflow/examples/pull/816&quot;&gt;PR&lt;/a&gt; to add these notebooks in Kubeflow‚Äôs official repo. The PR got merged and the code currently resides in &lt;a href=&quot;https://github.com/kubeflow/examples/tree/master/tensorflow_cuj&quot;&gt;kubeflow/examples/tensorflow_cuj&lt;/a&gt; directory marking the completion of the project.&lt;/p&gt;

&lt;h1 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h1&gt;

&lt;p&gt;Special thanks are due to -&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;My mentors for their valuable guidance throughout the project.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/jeremy-lewi-600aaa8/&quot;&gt;Jeremy&lt;/a&gt; and &lt;a href=&quot;https://www.linkedin.com/in/sarahmaddox/&quot;&gt;Sarah&lt;/a&gt; for smooth conduction of the Kubeflow GSoC program.&lt;/li&gt;
  &lt;li&gt;The GSoC Discord &lt;a href=&quot;https://discord.com/channels/708636399666069514/708636400097951744&quot;&gt;Server&lt;/a&gt; and the GSoC Telegram &lt;a href=&quot;https://web.telegram.org/#/im?p=s1263176603_5411849872541551939&quot;&gt;Channel&lt;/a&gt; for the help, casual talks and a strong global student community.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>&lt;a href='https://www.linkedin.com/in/yash-jakhotiya/'&gt;Yash Jakhotiya&lt;/a&gt;</name></author><summary type="html">Introduction</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://yashjakhotiya.github.io/blog/images/2020-08-23-gsoc-20-tf-2-examples/logos.jpg" /><media:content medium="image" url="https://yashjakhotiya.github.io/blog/images/2020-08-23-gsoc-20-tf-2-examples/logos.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>